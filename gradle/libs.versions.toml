[versions]
kotlin = "2.2.0"
dokka = "2.0.0"
ktlint = "13.0.0"
detekt = "1.23.8"
kover = "0.9.1"
ktor = "3.2.1"
logback = "1.5.18"
# DB
exposed = "1.0.0-beta-3"
postgres-r2dbc = "1.0.7.RELEASE"
postgres-jdbc = "42.7.7"
flyway = "11.10.4"
r2dbc-pool = "1.0.2.RELEASE"
# Test
kotest = "6.0.0.M4"
faker = "2.0.0-rc.10"
mockk = "1.14.4"
coroutines = "1.10.2"

[libraries]
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-openapi = { module = "io.ktor:ktor-server-openapi", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger", version.ref = "ktor" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

# DB
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-r2dbc = { module = "org.jetbrains.exposed:exposed-r2dbc", version.ref = "exposed" }
postgresql-r2dbc = { module = "org.postgresql:r2dbc-postgresql", version.ref = "postgres-r2dbc" }
postgresql-jdbc = { module = "org.postgresql:postgresql", version.ref = "postgres-jdbc" }
r2dbc-pool = { module = "io.r2dbc:r2dbc-pool", version.ref = "r2dbc-pool" }
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }

#Test
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotest = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
faker = { module = "io.github.serpro69:kotlin-faker", version.ref = "faker" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

[bundles]
databases = [
    "exposed-core",
    "exposed-r2dbc",
    "r2dbc-pool",
    "flyway"
]

databases-runtime = [
    "postgresql-jdbc",
    "postgresql-r2dbc"
]

ktor = [
    "ktor-server-core",
    "ktor-serialization-kotlinx-json",
    "ktor-server-auth",
    "ktor-server-auth-jwt",
    "ktor-server-config-yaml",
    "ktor-server-content-negotiation",
    "ktor-server-netty",
    "ktor-server-openapi",
    "ktor-server-swagger",
    "coroutines"
]

test = [
    "kotlin-test-junit",
    "ktor-server-test-host",
    "kotest",
    "kotest-assertions-core",
    "faker",
    "mockk"
]

performance-test = [
    "kotlin-test-junit",
    "ktor-server-test-host",
    "kotest",
    "kotest-assertions-core",
    "faker",
    "mockk"
]

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
